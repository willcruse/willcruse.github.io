{"version":3,"sources":["willPic.jpg","GitHubProjects.js","HackathonsComp.js","App.js","index.js"],"names":["module","exports","GitHubProject","props","Card","style","marginBottom","maxWidth","Header","value","name","Body","description","Text","Link","href","html_url","ReposDiplay","GitHubProjects","useState","projects","updateProjects","showSpinner","toggleSpinner","useEffect","fetch","then","resp","json","sort","a","b","Date","parse","updated_at","filter","val","includes","Container","fluid","Row","Spinner","animation","CardColumns","map","ind","key","Hackathon","width","title","devpost","ListGroup","Item","tech","Hackathons","HackathonsComp","ProfileComp","Img","src","logo","variant","Title","App","marginTop","Col","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9223aa71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/willPic.deedb59a.jpg\";","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Card, CardColumns, Spinner } from \"react-bootstrap\";\n\nconst GitHubProjects = () => {\n  const [projects, updateProjects] = useState([]);\n  const [showSpinner, toggleSpinner] = useState(false);\n\n  useEffect(() => {\n    toggleSpinner(true);\n    fetch(\"https://api.github.com/users/willcruse/repos\")\n      .then(resp => {\n        return resp.json();\n      })\n      .then(json => {\n        json.sort((a, b) => {\n          return Date.parse(b.updated_at) - Date.parse(a.updated_at);\n        });\n        updateProjects(json.filter(val => ReposDiplay.includes(val.name)));\n        toggleSpinner(false);\n      });\n  }, []);\n\n  return (\n    <Container fluid>\n      <Row>\n        <h1>GitHub Repos</h1>\n      </Row>\n      <Row>\n        <p>Here is a list of my most recent GitHub Repos</p>\n      </Row>\n      <Row>\n        {showSpinner ? (\n          <Spinner animation={\"border\"} />\n        ) : (\n          <CardColumns>\n            {projects.map((val, ind) => {\n              return <GitHubProject value={val} key={ind} />;\n            })}\n          </CardColumns>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nconst GitHubProject = props => (\n  <Card style={{ marginBottom: \"0.5rem\", maxWidth: \"15rem\" }}>\n    <Card.Header>{props.value.name}</Card.Header>\n    <Card.Body>\n      {props.value.description == null ? (\n        <></>\n      ) : (\n        <Card.Text>{props.value.description}</Card.Text>\n      )}\n      <Card.Link href={props.value.html_url}>GitHub Repo</Card.Link>\n    </Card.Body>\n  </Card>\n);\n\nconst ReposDiplay = [\n  \"hack-the-plug\",\n  \"react-tutorial\",\n  \"arduinoProjects\",\n  \"ciscouniversitychallenge\",\n  \"rfidCloner\",\n  \"oxfordhacks\",\n  \"whoisit\"\n];\n\nexport default GitHubProjects;\n","import React from \"react\";\nimport { Container, Row, CardColumns, Card, ListGroup } from \"react-bootstrap\";\n\nconst HackathonsComp = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <h1>Hackathons</h1>\n      </Row>\n      <Row>\n          <p>A collection of my hackathon projects</p>\n      </Row>\n      <Row>\n        <CardColumns>\n          {Hackathons.map((val, ind) => {\n            return <Hackathon key={ind} value={val} />;\n          })}\n        </CardColumns>\n      </Row>\n    </Container>\n  );\n};\n\nconst Hackathon = ({ value }) => (\n  <Card style={{ width: \"15rem\" }}>\n    <Card.Header>{value.title}</Card.Header>\n    <Card.Body>\n      <Card.Text>{value.description}</Card.Text>\n      <Card.Link href={value.devpost}>DevPost</Card.Link>\n    </Card.Body>\n    <ListGroup>\n      <ListGroup.Item>\n        <b>Technologies</b>\n      </ListGroup.Item>\n      {value.tech.map((val, ind) => {\n        return <ListGroup.Item key={ind}>{val}</ListGroup.Item>;\n      })}\n    </ListGroup>\n  </Card>\n);\n\nconst Hackathons = [\n  {\n    title: \"OxfordHacks\",\n    devpost: \"https://devpost.com/software/mimic-me\",\n    description:\n      \"At OxfordHacks we used Facebook densepose to track the positions of a player whilst they dance. We then used this data to see how close a second player could mimic there dance moves\",\n    tech: [\"ReactJS\", \"Python\", \"Densepose\"]\n  },\n  {\n    title: \"JunctionX Exeter\",\n    devpost: \"https://devpost.com/software/tedward\",\n    description:\n      \"We created Tedward, a self driving robot which useses IR sensors to follow black tape on the floor. The route that Tedward followed could be programmed through a user interface where you could specify each node and the connections between. We then found the relevant path and directed Tedward where to go.\",\n    tech: [\"Arduino\", \"Python\", \"ReactJS\"]\n  },\n  {\n      title: \"PennApps\",\n      devpost: \"https://devpost.com/software/fin-1t56x4\",\n      description:\n        \"Fin was a personal assistant we created for financial traders which used AR to display candle charts as well as to show what stocks are similar to each other. We discovered which stocks are similar to each other using the BERT natural language proceessing model to analyse recent reports on the stocks.\",\n      tech: [\"Python\", \"Bert\", \"React Native\", \"AWS Lambda\"]\n  }\n];\n\nexport default HackathonsComp;\n","import React from \"react\";\nimport logo from \"./willPic.jpg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport GitHubProjects from \"./GitHubProjects\";\nimport HackathonsComp from \"./HackathonsComp\";\n\nfunction App() {\n  return (\n    <Container fluid style={{ marginTop: \"1rem\" }}>\n      <Row>\n        <Col>\n          <ProfileComp />\n        </Col>\n        <Col>\n          <HackathonsComp />\n        </Col>\n        <Col>\n          <GitHubProjects />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst ProfileComp = () => {\n  return (\n    <Container>\n      <Row>\n        <h1>Will Cruse</h1>\n      </Row>\n      <Row>\n        <Card style={{ maxWidth: \"15rem\" }}>\n          <Card.Img src={logo} variant=\"top\" />\n          <Card.Body>\n            <Card.Title>\n              <b>About Me</b>\n            </Card.Title>\n            <Card.Text>\n              I am a second year Computer Science student at the University of\n              Bath. I take a keen interest in hackathons and am the founder of HackThePlug, a hackathon held at the University of Bath.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}